{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.signTransaction = void 0;\nconst jsontokens_1 = require(\"jsontokens\");\nconst provider_1 = require(\"../provider\");\nconst signTransaction = async options => {\n  const provider = await (0, provider_1.getProviderOrThrow)(options.getProvider);\n  const {\n    psbtBase64,\n    inputsToSign\n  } = options.payload;\n  if (!psbtBase64) {\n    throw new Error('A value for psbtBase64 representing the tx hash is required');\n  }\n  if (!inputsToSign) {\n    throw new Error('An array specifying the inputs to be signed by the wallet is required');\n  }\n  try {\n    const request = (0, jsontokens_1.createUnsecuredToken)(options.payload);\n    const response = await provider.signTransaction(request);\n    options.onFinish?.(response);\n  } catch (error) {\n    console.error('[Connect] Error during sign transaction request', error);\n    options.onCancel?.();\n  }\n};\nexports.signTransaction = signTransaction;","map":{"version":3,"names":["jsontokens_1","require","provider_1","signTransaction","options","provider","getProviderOrThrow","getProvider","psbtBase64","inputsToSign","payload","Error","request","createUnsecuredToken","response","onFinish","error","console","onCancel","exports"],"sources":["../../src/transactions/signTransaction.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,MAAAA,YAAA,GAAAC,OAAA;AAEA,MAAAC,UAAA,GAAAD,OAAA;AAGO,MAAME,eAAe,GAAG,MAAOC,OAA+B,IAAI;EACvE,MAAMC,QAAQ,GAAG,MAAM,IAAAH,UAAA,CAAAI,kBAAkB,EAACF,OAAO,CAACG,WAAW,CAAC;EAE9D,MAAM;IAAEC,UAAU;IAAEC;EAAY,CAAE,GAAGL,OAAO,CAACM,OAAO;EACpD,IAAI,CAACF,UAAU,EAAE;IACf,MAAM,IAAIG,KAAK,CAAC,6DAA6D,CAAC;;EAEhF,IAAI,CAACF,YAAY,EAAE;IACjB,MAAM,IAAIE,KAAK,CAAC,uEAAuE,CAAC;;EAG1F,IAAI;IACF,MAAMC,OAAO,GAAG,IAAAZ,YAAA,CAAAa,oBAAoB,EAACT,OAAO,CAACM,OAA0B,CAAC;IACxE,MAAMI,QAAQ,GAAG,MAAMT,QAAQ,CAACF,eAAe,CAACS,OAAO,CAAC;IACxDR,OAAO,CAACW,QAAQ,GAAGD,QAAQ,CAAC;GAC7B,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACvEZ,OAAO,CAACc,QAAQ,GAAE,CAAE;;AAExB,CAAC;AAnBYC,OAAA,CAAAhB,eAAe,GAAAA,eAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}