{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sendBtcTransaction = void 0;\nconst jsontokens_1 = require(\"jsontokens\");\nconst provider_1 = require(\"../provider\");\nconst serializer = recipient => {\n  return recipient.map(value => {\n    const {\n      address,\n      amountSats\n    } = value;\n    return {\n      address,\n      amountSats: amountSats.toString()\n    };\n  });\n};\nconst sendBtcTransaction = async options => {\n  const provider = await (0, provider_1.getProviderOrThrow)(options.getProvider);\n  const {\n    recipients,\n    senderAddress,\n    network,\n    message\n  } = options.payload;\n  if (!recipients || recipients.length === 0) {\n    throw new Error('At least one recipient is required');\n  }\n  if (recipients.some(item => typeof item.address !== 'string' || typeof item.amountSats !== 'bigint')) {\n    throw new Error('Incorrect recipient format');\n  }\n  if (!senderAddress) {\n    throw new Error('The sender address is required');\n  }\n  try {\n    const serializedRecipients = serializer(recipients);\n    const serializedPayload = {\n      network,\n      senderAddress,\n      message,\n      recipients: serializedRecipients\n    };\n    const request = (0, jsontokens_1.createUnsecuredToken)(serializedPayload);\n    const response = await provider.sendBtcTransaction(request);\n    options.onFinish?.(response);\n  } catch (error) {\n    console.error('[Connect] Error during send BTC transaction request', error);\n    options.onCancel?.();\n  }\n};\nexports.sendBtcTransaction = sendBtcTransaction;","map":{"version":3,"names":["jsontokens_1","require","provider_1","serializer","recipient","map","value","address","amountSats","toString","sendBtcTransaction","options","provider","getProviderOrThrow","getProvider","recipients","senderAddress","network","message","payload","length","Error","some","item","serializedRecipients","serializedPayload","request","createUnsecuredToken","response","onFinish","error","console","onCancel","exports"],"sources":["../../src/transactions/sendBtcTransaction.ts"],"sourcesContent":[null],"mappings":";;;;;;AACA,MAAAA,YAAA,GAAAC,OAAA;AAEA,MAAAC,UAAA,GAAAD,OAAA;AAQA,MAAME,UAAU,GAAIC,SAAsB,IAA2B;EACnE,OAAOA,SAAS,CAACC,GAAG,CAAEC,KAAK,IAAI;IAC7B,MAAM;MAAEC,OAAO;MAAEC;IAAU,CAAE,GAAGF,KAAK;IACrC,OAAO;MACLC,OAAO;MACPC,UAAU,EAAEA,UAAU,CAACC,QAAQ;KAChC;EACH,CAAC,CAAC;AACJ,CAAC;AAEM,MAAMC,kBAAkB,GAAG,MAAOC,OAAkC,IAAI;EAC7E,MAAMC,QAAQ,GAAG,MAAM,IAAAV,UAAA,CAAAW,kBAAkB,EAACF,OAAO,CAACG,WAAW,CAAC;EAE9D,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC,OAAO;IAAEC;EAAO,CAAE,GAAGP,OAAO,CAACQ,OAAO;EACvE,IAAI,CAACJ,UAAU,IAAIA,UAAU,CAACK,MAAM,KAAK,CAAC,EAAE;IAC1C,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;;EAEvD,IACEN,UAAU,CAACO,IAAI,CACZC,IAAI,IAAK,OAAOA,IAAI,CAAChB,OAAO,KAAK,QAAQ,IAAI,OAAOgB,IAAI,CAACf,UAAU,KAAK,QAAQ,CAClF,EACD;IACA,MAAM,IAAIa,KAAK,CAAC,4BAA4B,CAAC;;EAE/C,IAAI,CAACL,aAAa,EAAE;IAClB,MAAM,IAAIK,KAAK,CAAC,gCAAgC,CAAC;;EAGnD,IAAI;IACF,MAAMG,oBAAoB,GAA0BrB,UAAU,CAACY,UAAU,CAAC;IAC1E,MAAMU,iBAAiB,GAAwC;MAC7DR,OAAO;MACPD,aAAa;MACbE,OAAO;MACPH,UAAU,EAAES;KACb;IACD,MAAME,OAAO,GAAG,IAAA1B,YAAA,CAAA2B,oBAAoB,EAACF,iBAAoC,CAAC;IAC1E,MAAMG,QAAQ,GAAG,MAAMhB,QAAQ,CAACF,kBAAkB,CAACgB,OAAO,CAAC;IAC3Df,OAAO,CAACkB,QAAQ,GAAGD,QAAQ,CAAC;GAC7B,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,qDAAqD,EAAEA,KAAK,CAAC;IAC3EnB,OAAO,CAACqB,QAAQ,GAAE,CAAE;;AAExB,CAAC;AAjCYC,OAAA,CAAAvB,kBAAkB,GAAAA,kBAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}